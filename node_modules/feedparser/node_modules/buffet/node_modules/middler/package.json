{
  "name": "middler",
  "version": "0.4.7",
  "description": "An embeddable middleware runner",
  "scripts": {
    "test": "make test"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/carlos8f/node-middler.git"
  },
  "keywords": [
    "middleware",
    "http",
    "server"
  ],
  "author": {
    "name": "Carlos Rodriguez"
  },
  "license": "MIT",
  "engines": {
    "node": ">= 0.6.0"
  },
  "devDependencies": {
    "mocha": "*",
    "superagent": "*",
    "benchmarx": "~0.2.2"
  },
  "readme": "middler\n=======\n\nAn embeddable middleware runner\n\n[![Build Status](https://secure.travis-ci.org/carlos8f/node-middler.png?branch=master)](http://travis-ci.org/carlos8f/node-middler)\n\nIdea\n----\n\nmiddler is a flexible, tiny middleware runner for Node.js which can easily be\nembedded in an existing http server or even an existing middleware chain.\nAlso provided is [express](https://github.com/visionmedia/express)-like routing\nand [union](https://github.com/flatiron/union) compatibility. Best of all, the\ncode is dead simple and dependency-free.\n\nEnjoy!\n\nInstall\n-------\n\n```\n$ npm install middler\n```\n\nBasic usage\n-----------\n\n```javascript\nvar middler = require('middler')\n  , server = require('http').createServer()\n  , buffet = require('buffet')('./public')\n\nmiddler(server)\n  .add(buffet)\n  .add(function(req, res, next) {\n    // ... do some stuff\n    next();\n  })\n  .add(buffet.notFound);\n\nserver.listen(3000);\n```\n\nRouting\n-------\n\n```javascript\nmiddler(server)\n  .get('/robots.txt', function (req, res, next) {\n    res.end('humans only!');\n  })\n  .post('/posts/:id', function (req, res, next) {\n    // req.params.id available\n  });\n```\n\nMultiple paths/methods/handlers\n-------------------------------\n\n```javascript\nmiddler(server)\n  .add(['get', 'post'], '/', function (req, res, next) {\n    // handle both get and post requests\n  });\n\n// Or add multiple handlers\nfunction bodyParser (req, res, next) { req.body = ... }\nfunction formHandler (req, res, next) { use req.body ... }\n\nmiddler(server)\n  .post('/posts', [bodyParser, formHandler]);\n```\n\nmiddler is a middleware, too\n----------------------------\n\nWriting some middleware and need routes? Just use `middler().handler` which\nreturns a middleware handler!\n\n```javascript\nvar connect = require('connect')\n  , http = require('http')\n  , middler = require('middler')\n\nvar app = connect()\n  .use(connect.favicon())\n  .use(connect.logger('dev'))\n  .use(connect.static('public'))\n  .use(connect.directory('public'))\n  .use(connect.cookieParser('my secret here'))\n  .use(connect.session())\n  .use(middler()\n    .get('/', function (req, res, next) {\n      res.end('hello world!');\n    })\n    .add(function (req, res) {\n      res.writeHead(404);\n      res.end('page not found');\n    })\n    .handler\n  );\n\nhttp.createServer(app).listen(3000);\n```\n\n[union](https://github.com/flatiron/union) compatibility\n--------------------------------------------------------\n\n```javascript\nmiddler(server)\n  .add(function () {\n    // this.req\n    // this.res\n    this.res.emit('next');\n  });\n```\n\nBenchmarks\n----------\n\nMy results: https://gist.github.com/3473117\n\n### App with single middleware, \"hello world\"\n\n```\n****************  middler (7646.63 rps)\n****************  connect (7198.48 rps)\n*******           union (3057.69 rps)\n```\n\n### App with 100 routes\n\n```\n****************  middler-routes (6870.59 rps)\n***************   express-routes (6335.41 rps)\n******            director-routes (2414.89 rps)\n```\n\n### Running your own benchmark\n\nIn the middler root, run:\n\n```bash\n$ make bench\n```\n\nBrought to you by [benchmarx](https://github.com/carlos8f/node-benchmarx).\n\nLicense\n-------\n\nDeveloped by [Terra Eclipse](http://www.terraeclipse.com)\n--------------------------------------------------------\nTerra Eclipse, Inc. is a nationally recognized political technology and\nstrategy firm located in Aptos, CA and Washington, D.C.\n\n[http://www.terraeclipse.com](http://www.terraeclipse.com)\n\n\nLicense: MIT\n------------\nCopyright (C) 2012 Terra Eclipse, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is furnished\nto do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
  "readmeFilename": "README.md",
  "_id": "middler@0.4.7",
  "dist": {
    "shasum": "94327817b5f6e57395abd11aa0276b31757f16a3"
  },
  "_from": "middler@~0.4.5",
  "_resolved": "https://registry.npmjs.org/middler/-/middler-0.4.7.tgz"
}
